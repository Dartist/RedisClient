{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","uri":"dart-sdk/lib/core/exceptions.dart","name":"Exception","id":"Exception","children":[{"returnType":{"refId":"dart.core/Exception","name":"Exception"},"name":"Exception","id":"Exception1()","children":[{"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"21","kind":"constructor"}],"line":"20","kind":"class"}],"line":"5","kind":"library"}],"comment":"\nA redis client that communicates with redis through a socket and exposes\na high level API.\n\nInternally, it uses the [RedisProtocolTransformer] to transform binary\ndata from the socket to formatted [RedisReply]s.\n\nPlease see the [RedisClient] documentation for detailed documentation on\nhow to use this library.\n","uri":"redis_client/lib/redis_client.dart","id":"redis_client","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Parses the connection string.","uri":"redis_client/lib/redis_client/redis_connection_settings.dart","name":"RedisConnectionSettings","id":"RedisConnectionSettings","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"connectionString","id":"connectionString","line":"8","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"hostname","id":"hostname","line":"10","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"password","id":"password","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"port","id":"port","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"db","id":"db","line":"16","kind":"variable"},{"comment":"Parses provided connection string and sets the corresponding settings.\n\nSee the [RedisConnection] class documentation on which connectionStrings\nare allowed.","name":"RedisConnectionSettings","id":"RedisConnectionSettings1()","children":[{"initializedField":{"refId":"redis_client/RedisConnectionSettings/connectionString","name":"connectionString"},"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"connectionString","id":"connectionString","kind":"param"}],"line":"22","kind":"constructor"}],"line":"6","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nClass that handles responses from the redis socket, and serves the replies.\n\nThis class gets returned when calling [RedisConnection.send] and serves as\na proxy for the actual [RedisReply] object.\n","uri":"redis_client/lib/redis_client/redis_connection.dart","name":"Receiver","id":"Receiver","children":[{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"Will automatically resolve all futures requested with this response.","name":"reply=","id":"reply=1()","children":[{"name":"reply","id":"reply","kind":"param"}],"line":"292","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"}],"name":"Future"},"comment":"\nReturns a [Future] that gets resolved and doesn't check the return value.\n\nNote that **all** redis replies are checked for valid syntax and format.\nThis reply just doesn't check for a specific reply type.\n","name":"receive","id":"receive0()","line":"314","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [IntegerReply].\n","name":"receiveInteger","id":"receiveInteger0()","line":"319","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [ErrorReply].\n","name":"receiveError","id":"receiveError0()","line":"332","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [IntegerReply] and returns `true`\nif `1` and `false` otherwise.\n","name":"receiveBool","id":"receiveBool0()","line":"346","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [StatusReply].\n","name":"receiveStatus","id":"receiveStatus1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"expectedStatus","id":"expectedStatus","kind":"param"}],"line":"354","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [BulkReply] and returns the byte\nlist.\n","name":"receiveBulkData","id":"receiveBulkData0()","line":"374","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [BulkReply] and returns a [String].\n","name":"receiveBulkString","id":"receiveBulkString0()","line":"386","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"Future"},"comment":"\nReturns the data received by this bulk reply deserialized.\n","name":"receiveBulkDeserialized","id":"receiveBulkDeserialized1()","children":[{"ref":{"refId":"redis_client/RedisSerializer","name":"RedisSerializer"},"name":"serializer","id":"serializer","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"redis_protocol_transformer/MultiBulkReply","name":"MultiBulkReply"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [MultiBulkReply].\n","name":"receiveMultiBulk","id":"receiveMultiBulk0()","line":"405","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [MultiBulkReply] and returns a list\nof strings.\n","name":"receiveMultiBulkStrings","id":"receiveMultiBulkStrings0()","line":"418","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"List"}],"name":"Future"},"comment":"\nChecks that the received reply is of type [MultiBulkReply] and returns a list\nof deserialized objects.\n","name":"receiveMultiBulkDeserialized","id":"receiveMultiBulkDeserialized1()","children":[{"ref":{"refId":"redis_client/RedisSerializer","name":"RedisSerializer"},"name":"serializer","id":"serializer","kind":"param"}],"line":"428","kind":"method"},{"ref":{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"},"name":"reply","id":"reply","line":"289","kind":"property"},{"ref":{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"},"comment":"Gets set when received.","name":"_reply","isPrivate":true,"id":"_reply","line":"287","kind":"variable"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"}],"name":"Future"},"name":"_received","isPrivate":true,"id":"_received","line":"297","kind":"variable"},{"ref":{"refId":"dart.async/Completer","arguments":[{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"}],"name":"Completer"},"name":"_receivedCompleter","isPrivate":true,"id":"_receivedCompleter","line":"299","kind":"variable"},{"comment":"\nYou should never need to create a [Receiver] instance yourself.\n","name":"Receiver","id":"Receiver0()","line":"304","kind":"constructor"}],"line":"284","kind":"class"},{"superclass":{"refId":"redis_client/RedisConnection","name":"RedisConnection"},"comment":"The actual implementation of the [RedisConnection].","uri":"redis_client/lib/redis_client/redis_connection.dart","name":"_RedisConnection","isPrivate":true,"id":"_RedisConnection","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"redis_client/RedisConnection","name":"RedisConnection"}],"name":"Future"},"isStatic":true,"comment":"\nCreates a [RedisConnection], and returns the future for a connection.\n\nPlease refere to the [RedisConnection] documentation for a list of valid\nconnection strings.\n","name":"connect","id":"connect1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"connectionString","id":"connectionString","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Closes the connection.","name":"close","id":"close0()","line":"176","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Selects configured database.\n\nIf db is provided the configuration [db] will be set to it.","name":"select","id":"select1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"db","id":"db","kind":"param"}],"line":"185","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Authenticates with configured password.","name":"_authenticate","isPrivate":true,"id":"_authenticate1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"_password","isPrivate":true,"id":"_password","kind":"param"}],"line":"191","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Gets called when the socket has an error.","name":"_onSocketError","isPrivate":true,"id":"_onSocketError1()","children":[{"name":"err","id":"err","kind":"param"}],"line":"196","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Handles new data received from stream.","name":"_onRedisReply","isPrivate":true,"id":"_onRedisReply1()","children":[{"ref":{"refId":"redis_protocol_transformer/RedisReply","name":"RedisReply"},"name":"redisReply","id":"redisReply","kind":"param"}],"line":"202","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Handles stream errors","name":"_onStreamError","isPrivate":true,"id":"_onStreamError1()","children":[{"name":"err","id":"err","kind":"param"}],"line":"220","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Gets called when the stream closes.","name":"_onStreamDone","isPrivate":true,"id":"_onStreamDone0()","line":"227","kind":"method"},{"returnType":{"refId":"redis_client/Receiver","name":"Receiver"},"comment":"\nReturns a [Receiver] on which you can get a future of a specific type.\n\nEg.:\n\n    send([ \"COMMAND\" ]).receiveInteger().then((int number) { });\n\nThis function converts the [String]s to binary data, and forwards to\n[rawSend].\n","name":"send","id":"send1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"cmdWithArgs","id":"cmdWithArgs","kind":"param"}],"line":"244","kind":"method"},{"returnType":{"refId":"redis_client/Receiver","name":"Receiver"},"comment":"\nThis is the same as [send] except that it takes a list of binary data.\n\nEg.:\n\n    rawSend([ \"GET\".codeUnits, encodeUtf8(\"keyname\") ]).receiveBulkString().then((String value) { });\n","name":"rawSend","id":"rawSend1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"cmdWithArgs","id":"cmdWithArgs","kind":"param"}],"line":"254","kind":"method"},{"ref":{"refId":"dart.core/Map","name":"Map"},"comment":"TODO actually implement.","name":"stats","id":"stats","line":"129","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"connectionString","id":"connectionString","line":"75","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"hostname","id":"hostname","line":"77","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"password","id":"password","line":"79","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"port","id":"port","line":"81","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"db","id":"db","line":"83","kind":"variable"},{"ref":{"refId":"dart.io/Socket","name":"Socket"},"comment":"The [Socket] used in this connection.","name":"_socket","isPrivate":true,"id":"_socket","line":"87","kind":"variable"},{"ref":{"refId":"dart.async/Completer","arguments":[{"refId":"redis_client/RedisConnection","name":"RedisConnection"}],"name":"Completer"},"isFinal":true,"comment":"The completer that resolves the future as soon as the RedisConnection\nis connected.","name":"_connectedCompleter","isPrivate":true,"id":"_connectedCompleter","line":"92","kind":"variable"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"redis_client/RedisConnection","name":"RedisConnection"}],"name":"Future"},"comment":"Gets resolved as soon as the connection is up.","name":"connected","id":"connected","line":"95","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"comment":"The character sequence that ends data.\n\n`\\r\\n`","name":"_lineEnd","isPrivate":true,"id":"_lineEnd","line":"101","kind":"variable"},{"ref":{"refId":"logging/Logger","name":"Logger"},"comment":"Used to output debug information","name":"logger","id":"logger","line":"105","kind":"variable"},{"ref":{"refId":"dart.typed_data/Int8List","name":"Int8List"},"name":"_cmdBuffer","isPrivate":true,"id":"_cmdBuffer","line":"109","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_cmdBufferIndex","isPrivate":true,"id":"_cmdBufferIndex","line":"111","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"breathingSpace","id":"breathingSpace","line":"114","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Statistics","name":"totalBuffersWrites","id":"totalBuffersWrites","line":"117","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Statistics","name":"totalBufferFlushes","id":"totalBufferFlushes","line":"120","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Statistics","name":"totalBufferResizes","id":"totalBufferResizes","line":"123","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Statistics","name":"totalBytesWritten","id":"totalBytesWritten","line":"126","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"redis_client/Receiver","name":"Receiver"}],"name":"List"},"name":"_pendingResponses","isPrivate":true,"id":"_pendingResponses","line":"232","kind":"variable"},{"comment":"Create a new [RedisConnection] with given connectionString.","name":"_RedisConnection","id":"_RedisConnection5()","children":[{"initializedField":{"refId":"redis_client/_RedisConnection/connectionString","name":"connectionString"},"ref":{"refId":"dart.core/String","name":"String"},"name":"connectionString","id":"connectionString","kind":"param"},{"initializedField":{"refId":"redis_client/_RedisConnection/hostname","name":"hostname"},"ref":{"refId":"dart.core/String","name":"String"},"name":"hostname","id":"hostname","kind":"param"},{"initializedField":{"refId":"redis_client/_RedisConnection/password","name":"password"},"ref":{"refId":"dart.core/String","name":"String"},"name":"password","id":"password","kind":"param"},{"initializedField":{"refId":"redis_client/_RedisConnection/port","name":"port"},"ref":{"refId":"dart.core/int","name":"int"},"name":"port","id":"port","kind":"param"},{"initializedField":{"refId":"redis_client/_RedisConnection/db","name":"db"},"ref":{"refId":"dart.core/int","name":"int"},"name":"db","id":"db","kind":"param"}],"line":"148","kind":"constructor"}],"line":"70","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The [RedisConnection] wraps the Socket, and provides an API to communicate\nto redis.\n\nYou instantiate a [RedisConnection] with:\n\n    RedisConnection.connect(connectionString)\n        .then((RedisConnection connection) {\n          // Use your connection\n        });\n\nwhere `connectionString` can be any of following:\n\n- `'pass@host:port/db'`\n- `'pass@host:port'`\n- `'pass@host'`\n- `'host'`\n- `null` defaults to `'localhost:6379/0'`","uri":"redis_client/lib/redis_client/redis_connection.dart","name":"RedisConnection","id":"RedisConnection","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"redis_client/RedisConnection","name":"RedisConnection"}],"name":"Future"},"isStatic":true,"comment":"Create a new [RedisConnection] with given connectionString.","name":"connect","id":"connect1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"connectionString","id":"connectionString","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Closes the connection.","name":"close","id":"close0()","line":"51","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"select","id":"select1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"db","id":"db","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"redis_client/Receiver","name":"Receiver"},"comment":"Convenient method to send [String] commands.","name":"send","id":"send1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"cmdWithArgs","id":"cmdWithArgs","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"redis_client/Receiver","name":"Receiver"},"comment":"Sends the commands already in binary.","name":"rawSend","id":"rawSend1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"cmdWithArgs","id":"cmdWithArgs","kind":"param"}],"line":"63","kind":"method"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"stats","id":"stats","line":"54","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"The connectionString from which the connection settings have been\nextruded.\n\nOnce this string has been parsed, it isn't used anymore.","name":"connectionString","id":"connectionString","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"Redis connection hostname","name":"hostname","id":"hostname","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"comment":"Redis connection password","name":"password","id":"password","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Redis connection port","name":"port","id":"port","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Redis database","name":"db","id":"db","line":"46","kind":"variable"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"redis_client/lib/redis_client/redis_client.dart","name":"_Tuple","isPrivate":true,"id":"_Tuple","children":[{"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item1","id":"item1","line":"731","kind":"variable"},{"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item2","id":"item2","line":"733","kind":"variable"},{"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item3","id":"item3","line":"735","kind":"variable"},{"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item4","id":"item4","line":"737","kind":"variable"},{"name":"_Tuple","id":"_Tuple4()","children":[{"initializedField":{"refId":"redis_client/_Tuple/item1","name":"item1"},"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item1","id":"item1","kind":"param"},{"initializedField":{"refId":"redis_client/_Tuple/item2","name":"item2"},"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"name":"item2","id":"item2","kind":"param"},{"initializedField":{"refId":"redis_client/_Tuple/item3","name":"item3"},"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"isOptional":true,"name":"item3","id":"item3","kind":"param"},{"initializedField":{"refId":"redis_client/_Tuple/item4","name":"item4"},"ref":{"refId":"redis_client/_Tuple/E","name":"E"},"isOptional":true,"name":"item4","id":"item4","kind":"param"}],"line":"739","kind":"constructor"},{"name":"E","id":"E","kind":"typeparam"}],"line":"729","kind":"class"},{"interfaces":[{"refId":"dart.core/Exception","name":"Exception"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"redis_client/lib/redis_client/redis_client.dart","name":"RedisClientException","id":"RedisClientException","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"724","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","line":"720","kind":"variable"},{"name":"RedisClientException","id":"RedisClientException1()","children":[{"initializedField":{"refId":"redis_client/RedisClientException/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"722","kind":"constructor"}],"line":"718","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThe [RedisClient] is a high level class to access your redis server.\n\nYou create a [RedisClient] like this:\n\n    var connectionString = \"localhost:6379\";\n    RedisClient.connect(connectionString)\n        .then((RedisClient client) {\n          // Use your client here. Eg.:\n          client.set(\"test\", \"value\").then((_) => print(\"success\"));\n        });\n\n[RedisClient] creates a [RedisConnection] internally, and just forwards the\n`connectionString` to it. So please refer to the [RedisConnection]\ndoc for a list of valid connection strings.\n\nIf you need to access the lower level functions for some reason, you can\naccess the [RawRedisCommands] with [RedisClient.raw].\n\nTo see how the binary redis socket works and detailed list of available\ncommands, please visit [redis documentation](http://redis.io/commands).\n","uri":"redis_client/lib/redis_client/redis_client.dart","name":"RedisClient","id":"RedisClient","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"redis_client/RedisClient","name":"RedisClient"}],"name":"Future"},"isStatic":true,"comment":"Returns a [Future] for a [RedisClient].","name":"connect","id":"connect1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"connectionString","id":"connectionString","kind":"param"}],"line":"45","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/Object","name":"Object"}],"name":"Map"},"comment":"Converts bytes to a Map","name":"toMap","id":"toMap1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"multiData","id":"multiData","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/Object","name":"Object"},{"refId":"dart.core/double","name":"double"}],"name":"Map"},"name":"toScoreMap","id":"toScoreMap1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"multiData","id":"multiData","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"Converts a list of bytes to a string","name":"_toStr","isPrivate":true,"id":"_toStr1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"bytes","id":"bytes","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"comment":"Converts a String to a list of UTF8 bytes.","name":"_keyBytes","isPrivate":true,"id":"_keyBytes1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"87","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"comment":"Converts any given value to it's binary representation of the string.","name":"_toBytes","isPrivate":true,"id":"_toBytes1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"comment":"Converts an integer to it's binary string representation.","name":"_intToBytes","isPrivate":true,"id":"_intToBytes1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"comment":"Takes a command and a map and returns a list of all binary values.","name":"_keyValueMapToList","isPrivate":true,"id":"_keyValueMapToList2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"command","id":"command","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"map","id":"map","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"close","id":"close0()","line":"126","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Admin\n=====\nSelect a database.\n\nWrapper for [RedisConnection.select]","name":"select","id":"select1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"db","id":"db","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Delete all the keys of the currently selected DB. This command never fails","name":"flushdb","id":"flushdb0()","line":"143","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Delete all the keys of all the existing databases, not just the currently selected one. This command never fails.","name":"flushall","id":"flushall0()","line":"146","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nThe [save] command performs a synchronous save of the dataset producing a point\nin time snapshot of all the data inside the Redis instance, in the form of an RDB file.\n\nYou almost never want to call [save] in production environments where it will\nblock all the other clients. Instead usually [bgsave] is used. However in case\nof issues preventing Redis to create the background saving child (for instance\nerrors in the fork(2) system call), the [save] command can be a good last resort\nto perform the dump of the latest dataset.\n","name":"save","id":"save0()","line":"162","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nSave the DB in background. The OK code is immediately returned.\n\nRedis forks, the parent continues to serve the clients, the child saves the DB on disk then exits.\n\nA client my be able to check if the operation succeeded using the [lastsave] command.\n","name":"bgsave","id":"bgsave0()","line":"171","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nThe command behavior is the following:\n\n- Stop all the clients.\n- Perform a blocking SAVE if at least one **save point** is configured.\n- Flush the Append Only File if AOF is enabled.\n- Quit the server.\n\nIf persistence is enabled this commands makes sure that Redis is switched off\nwithout the lost of any data. This is not guaranteed if the client uses simply\nSAVE and then QUIT because other clients may alter the DB data between the two commands.\n\nNote: A Redis instance that is configured for not persisting on disk (no AOF\nconfigured, nor \"save\" directive) will not dump the RDB file on SHUTDOWN,\nas usually you don't want Redis instances used only for caching to block on\nwhen shutting down.\n","name":"shutdown","id":"shutdown0()","line":"190","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nInstruct Redis to start an Append Only File rewrite process. The rewrite will\ncreate a small optimized version of the current Append Only File.\n\nIf BGREWRITEAOF fails, no data gets lost as the old AOF will be untouched.\n\nThe rewrite will be only triggered by Redis if there is not already a background\nprocess doing persistence.\n","name":"bgrewriteaof","id":"bgrewriteaof0()","line":"201","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nAsk the server to close the connection.\n\nThe connection is closed as soon as all pending replies have been written to the client.\n","name":"quit","id":"quit0()","line":"208","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Map"},"comment":"\nParses the string returned by the INFO command.\n","name":"parseInfoString","id":"parseInfoString1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"lines","id":"lines","kind":"param"}],"line":"238","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nThis command is often used to test if a connection is still alive, or to measure latency.\n\nFails if the result is not PONG.\n","name":"ping","id":"ping0()","line":"271","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"Future"},"comment":"Returns message.","name":"echo","id":"echo1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"\nReturns the string representation of the type of the value stored at key.\n\nThe different types that can be returned are:\n\n- string\n- list\n- set\n- zset\n- hash\n- none if string didn't exist\n","name":"type","id":"type1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"288","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"}],"name":"Future"},"comment":"Keys\n====\n\nReturns all keys matching pattern.\n\nWhile the time complexity for this operation is O(N), the constant times are fairly low. For example, Redis running on an entry level laptop can scan a 1 million key database in 40 milliseconds.\n\nSupported glob-style patterns:\n\n- `h?llo` matches `hello`, `hallo` and `hxllo`\n- `h*llo` matches `hllo` and `heeeello`\n- `h[ae]llo` matches `hello` and `hallo`, but not `hillo`\n\nUse `\\` to escape special characters if you want to match them verbatim.\n\n**Warning**: consider [keys] as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases. This command is intended for debugging and special operations, such as changing your keyspace layout. Don't use [keys] in your regular application code. If you're looking for a way to find keys in a subset of your keyspace, consider using sets.\n","name":"keys","id":"keys1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"pattern","id":"pattern","kind":"param"}],"line":"310","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"Future"},"comment":"Returns the stored value of given key.","name":"get","id":"get1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"313","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"List"}],"name":"Future"},"comment":"Returns all the stored values of given keys.","name":"mget","id":"mget1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"keys","id":"keys","kind":"param"}],"line":"316","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Object","name":"Object"}],"name":"Future"},"comment":"Sets the value of given key, and returns the value that was stored previously.","name":"getset","id":"getset2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"319","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Sets the value of given key.","name":"set","id":"set2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"322","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nSets a value and the expiration in one step.\n\nThis is the same as:\n\n    client\n        ..set(mykey, value)\n        ..expire(mykey, seconds);\n","name":"setex","id":"setex3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"expireInSecs","id":"expireInSecs","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"333","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"[psetex] works exactly like [setex] with the sole difference that the expire time is specified in milliseconds instead of seconds.","name":"psetex","id":"psetex3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"expireInMs","id":"expireInMs","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"value","id":"value","kind":"param"}],"line":"336","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nRemove the existing timeout on key.\n\nTurns the key from volatile (a key with an expire set) to persistent (a key that will never expire as no timeout is associated).\n\nReturns `true` if the timeout was removed, `0` if key does not exist or does not have an associated timeout.\n","name":"persist","id":"persist1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"345","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"\nSets all values in the given map.\n\n[mset] replaces existing values with new values, just as regular [set].\n\nSee [msetnx] if you don't want to overwrite existing values.\n","name":"mset","id":"mset1()","children":[{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"map","id":"map","kind":"param"}],"line":"354","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nSets the given keys to their respective values. **[msetnx] will not perform any operation at all even if just a single key already exists.**\n\nBecause of this semantic [msetnx] can be used in order to set different keys representing different fields of an unique logic object in a way that ensures that either all the fields or none at all are set.\n\n[msetnx] is atomic, so all given keys are set at once. It is not possible for clients to see that some of the keys were updated while others are unchanged.\n","name":"msetnx","id":"msetnx1()","children":[{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"map","id":"map","kind":"param"}],"line":"363","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"Returns `true` if key exists, `false` otherwise.","name":"exists","id":"exists1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"366","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"comment":"\nDeletes a single key.\n\nReturns true if the key existed, false otherwise.\n\nContrary to redis `DEL` command this method takes only one key for\nconvenience. Use [mdel] if you want to delete multiple keys.\n","name":"del","id":"del1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"376","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"\nDeletes multiple keys and returns the number of deleted keys.\n\nThis command is called `DEL` in redis.\n","name":"mdel","id":"mdel1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"keys","id":"keys","kind":"param"}],"line":"383","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"\nIncrements the number stored at key by one returning the value of key after\nthe increment.\n\nIf the key does not exist, it is set to 0 before performing the operation.\n\nAn error is returned if the key contains a value of the wrong type or\ncontains a string that can not be represented as integer.\n\nThis operation is limited to 64 bit signed integers.\n","name":"incr","id":"incr1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"396","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"\nReturns the remaining time to live of a key that has a timeout.\n\nThis introspection capability allows a Redis client to check how many seconds a given key will continue to be part of the dataset.\n","name":"ttl","id":"ttl1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"}],"line":"447","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Wrapper for [RedisConnection.db]","name":"db","id":"db","line":"122","kind":"property"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"stats","id":"stats","line":"124","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"comment":"Return the number of keys in the currently-selected database.","name":"dbsize","id":"dbsize","line":"140","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/DateTime","name":"DateTime"}],"name":"Future"},"comment":"Returns the DateTime of the last DB [save] executed with success.","name":"lastsave","id":"lastsave","line":"150","kind":"property"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Map"}],"name":"Future"},"comment":"\nThe INFO command returns information and statistics about the server.\n\nThis function parses the output properly and returns a map in the form of:\n\n    {\n      \"Server\": {\n          \"redis_version\": \"2.5.13\",\n          \"redis_git_sha1\": \"2812b945\"\n          /* etc... */\n      },\n      \"Clients\": {\n          \"connected_clients\": \"8\"\n          /* etc... */\n      }\n      /* etc... */\n    }\n\nPlease refer to the [official redis info documentation](http://redis.io/commands/info)\nfor an explanation of the values.\n","name":"info","id":"info","line":"231","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"connectionString","id":"connectionString","line":"29","kind":"variable"},{"ref":{"refId":"redis_client/RedisConnection","name":"RedisConnection"},"comment":"The [RedisConnection] used to communicate with the Redis server.","name":"connection","id":"connection","line":"32","kind":"variable"},{"ref":{"refId":"dart.async/Future","arguments":[{"refId":"redis_client/RedisConnection","name":"RedisConnection"}],"name":"Future"},"comment":"The future that gets resolved as soon as the connection is available.","name":"connectionFuture","id":"connectionFuture","line":"35","kind":"variable"},{"ref":{"refId":"redis_client/RedisSerializer","name":"RedisSerializer"},"comment":"Used to serialize and deserialize the values stored inside Redis.","name":"serializer","id":"serializer","line":"39","kind":"variable"},{"comment":"Creates the [RedisConnection] and an instance of [RawRedisCommands].","name":"RedisClient._","isPrivate":true,"id":"RedisClient._1()","children":[{"initializedField":{"refId":"redis_client/RedisClient/connectionString","name":"connectionString"},"ref":{"refId":"dart.core/String","name":"String"},"name":"connectionString","id":"connectionString","kind":"param"}],"line":"52","kind":"constructor"}],"line":"27","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"redis_client/lib/redis_client/command_utils.dart","name":"_CommandUtils","isPrivate":true,"id":"_CommandUtils","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"name":"mergeCommandWithKeysAndValues","id":"mergeCommandWithKeysAndValues3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"cmd","id":"cmd","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"keys","id":"keys","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"values","id":"values","kind":"param"}],"line":"6","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"name":"mergeParamsWithKeysAndValues","id":"mergeParamsWithKeysAndValues3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"firstParams","id":"firstParams","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"keys","id":"keys","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"values","id":"values","kind":"param"}],"line":"9","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"comment":"Returns a single list with the command and the arguments as bytes merged into one.","name":"mergeCommandWithStringArgs","id":"mergeCommandWithStringArgs2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"cmd","id":"cmd","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"args","id":"args","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"comment":"Returns a single list with the command, the key and the arguments as bytes merged into one.","name":"mergeCommandWithKeyAndStringArgs","id":"mergeCommandWithKeyAndStringArgs3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"cmd","id":"cmd","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"args","id":"args","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"name":"mergeCommandWithKeyAndArgs","id":"mergeCommandWithKeyAndArgs3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"cmd","id":"cmd","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"key","id":"key","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"args","id":"args","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"isStatic":true,"name":"mergeCommandWithArgs","id":"mergeCommandWithArgs2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"cmd","id":"cmd","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"}],"name":"List"},"name":"args","id":"args","kind":"param"}],"line":"54","kind":"method"}],"line":"4","kind":"class"},{"interfaces":[{"refId":"redis_client/RedisSerializer","name":"RedisSerializer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"redis_client/lib/redis_client/redis_serializer.dart","name":"JsonRedisSerializer","id":"JsonRedisSerializer","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"serialize","id":"serialize1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"dart.core/Object","name":"Object"},"name":"deserialize","id":"deserialize1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"bytes","id":"bytes","kind":"param"}],"line":"33","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"OBJECT_START","id":"OBJECT_START","line":"19","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"ARRAY_START","id":"ARRAY_START","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"ZERO","id":"ZERO","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"NINE","id":"NINE","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"name":"SIGN","id":"SIGN","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"DATE_PREFIX","id":"DATE_PREFIX","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"DATE_SUFFIX","id":"DATE_SUFFIX","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"TRUE","id":"TRUE","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"isStatic":true,"name":"FALSE","id":"FALSE","line":"28","kind":"variable"}],"line":"17","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"redis_client/lib/redis_client/redis_serializer.dart","name":"RedisSerializer","id":"RedisSerializer","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"serialize","id":"serialize1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"obj","id":"obj","kind":"param"}],"line":"8","kind":"method"},{"returnType":{"refId":"dart.core/Object","name":"Object"},"name":"deserialize","id":"deserialize1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"bytes","id":"bytes","kind":"param"}],"line":"10","kind":"method"},{"returnType":{"refId":"redis_client/RedisSerializer","name":"RedisSerializer"},"name":"RedisSerializer","id":"RedisSerializer0()","line":"6","kind":"constructor"}],"line":"4","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"All available commands.\n\nTODO change to lazy static initializers","uri":"redis_client/lib/redis_client/redis_client_commands.dart","name":"RedisCommand","id":"RedisCommand","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"_chars","isPrivate":true,"id":"_chars1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"command","id":"command","kind":"param"}],"line":"9","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DBSIZE","id":"DBSIZE","line":"12","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"INFO","id":"INFO","line":"13","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LASTSAVE","id":"LASTSAVE","line":"14","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PING","id":"PING","line":"15","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ECHO","id":"ECHO","line":"16","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SLAVEOF","id":"SLAVEOF","line":"17","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"NO","id":"NO","line":"18","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ONE","id":"ONE","line":"19","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"CONFIG","id":"CONFIG","line":"20","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RESETSTAT","id":"RESETSTAT","line":"21","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"TIME","id":"TIME","line":"22","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DEBUG","id":"DEBUG","line":"23","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SEGFAULT","id":"SEGFAULT","line":"24","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RESTORE","id":"RESTORE","line":"25","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MIGRATE","id":"MIGRATE","line":"26","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MOVE","id":"MOVE","line":"27","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"OBJECT","id":"OBJECT","line":"28","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"REFCOUNT","id":"REFCOUNT","line":"29","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ENCODING","id":"ENCODING","line":"30","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"IDLETIME","id":"IDLETIME","line":"31","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SAVE","id":"SAVE","line":"32","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BGSAVE","id":"BGSAVE","line":"33","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SHUTDOWN","id":"SHUTDOWN","line":"34","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BGREWRITEAOF","id":"BGREWRITEAOF","line":"35","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"QUIT","id":"QUIT","line":"36","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"FLUSHDB","id":"FLUSHDB","line":"37","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"FLUSHALL","id":"FLUSHALL","line":"38","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"KEYS","id":"KEYS","line":"39","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SLOWLOG","id":"SLOWLOG","line":"40","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"TYPE","id":"TYPE","line":"43","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"STRLEN","id":"STRLEN","line":"44","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SET","id":"SET","line":"45","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"GET","id":"GET","line":"46","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DEL","id":"DEL","line":"47","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SETEX","id":"SETEX","line":"48","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PSETEX","id":"PSETEX","line":"49","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SETNX","id":"SETNX","line":"50","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PERSIST","id":"PERSIST","line":"51","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MSET","id":"MSET","line":"52","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MSETNX","id":"MSETNX","line":"53","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"GETSET","id":"GETSET","line":"54","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"EXISTS","id":"EXISTS","line":"55","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"INCR","id":"INCR","line":"56","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"INCRBY","id":"INCRBY","line":"57","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"INCRBYFLOAT","id":"INCRBYFLOAT","line":"58","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DECR","id":"DECR","line":"59","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DECRBY","id":"DECRBY","line":"60","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"APPEND","id":"APPEND","line":"61","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SUBSTR","id":"SUBSTR","line":"62","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"GETRANGE","id":"GETRANGE","line":"63","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SETRANGE","id":"SETRANGE","line":"64","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"GETBIT","id":"GETBIT","line":"65","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SETBIT","id":"SETBIT","line":"66","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RANDOMKEY","id":"RANDOMKEY","line":"67","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RENAME","id":"RENAME","line":"68","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RENAMENX","id":"RENAMENX","line":"69","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"EXPIRE","id":"EXPIRE","line":"70","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PEXPIRE","id":"PEXPIRE","line":"71","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"EXPIREAT","id":"EXPIREAT","line":"72","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PEXPIREAT","id":"PEXPIREAT","line":"73","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"TTL","id":"TTL","line":"74","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PTTL","id":"PTTL","line":"75","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MGET","id":"MGET","line":"78","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"WATCH","id":"WATCH","line":"79","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"UNWATCH","id":"UNWATCH","line":"80","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"MULTI","id":"MULTI","line":"81","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"EXEC","id":"EXEC","line":"82","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DISCARD","id":"DISCARD","line":"83","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SMEMBERS","id":"SMEMBERS","line":"86","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SADD","id":"SADD","line":"87","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SREM","id":"SREM","line":"88","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SPOP","id":"SPOP","line":"89","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SMOVE","id":"SMOVE","line":"90","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SCARD","id":"SCARD","line":"91","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SISMEMBER","id":"SISMEMBER","line":"92","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SINTER","id":"SINTER","line":"93","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SINTERSTORE","id":"SINTERSTORE","line":"94","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SUNION","id":"SUNION","line":"95","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SUNIONSTORE","id":"SUNIONSTORE","line":"96","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SDIFF","id":"SDIFF","line":"97","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SDIFFSTORE","id":"SDIFFSTORE","line":"98","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SRANDMEMBER","id":"SRANDMEMBER","line":"99","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SORT","id":"SORT","line":"102","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BY","id":"BY","line":"103","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"DESC","id":"DESC","line":"104","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ALPHA","id":"ALPHA","line":"105","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"STORE","id":"STORE","line":"106","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LRANGE","id":"LRANGE","line":"109","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RPUSH","id":"RPUSH","line":"110","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RPUSHX","id":"RPUSHX","line":"111","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LPUSH","id":"LPUSH","line":"112","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LPUSHX","id":"LPUSHX","line":"113","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LTRIM","id":"LTRIM","line":"114","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LREM","id":"LREM","line":"115","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LLEN","id":"LLEN","line":"116","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LINDEX","id":"LINDEX","line":"117","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LINSERT","id":"LINSERT","line":"118","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"AFTER","id":"AFTER","line":"119","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BEFORE","id":"BEFORE","line":"120","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LSET","id":"LSET","line":"121","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LPOP","id":"LPOP","line":"122","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RPOP","id":"RPOP","line":"123","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BLPOP","id":"BLPOP","line":"124","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"BRPOP","id":"BRPOP","line":"125","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"RPOPLPUSH","id":"RPOPLPUSH","line":"126","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZADD","id":"ZADD","line":"129","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREM","id":"ZREM","line":"130","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZINCRBY","id":"ZINCRBY","line":"131","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZRANK","id":"ZRANK","line":"132","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREVRANK","id":"ZREVRANK","line":"133","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZRANGE","id":"ZRANGE","line":"134","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREVRANGE","id":"ZREVRANGE","line":"135","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"WITHSCORES","id":"WITHSCORES","line":"136","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LIMIT","id":"LIMIT","line":"137","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZRANGEBYSCORE","id":"ZRANGEBYSCORE","line":"138","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREVRANGEBYSCORE","id":"ZREVRANGEBYSCORE","line":"139","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREMRANGEBYRANK","id":"ZREMRANGEBYRANK","line":"140","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZREMRANGEBYSCORE","id":"ZREMRANGEBYSCORE","line":"141","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZCARD","id":"ZCARD","line":"142","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZSCORE","id":"ZSCORE","line":"143","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZUNIONSTORE","id":"ZUNIONSTORE","line":"144","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"ZINTERSTORE","id":"ZINTERSTORE","line":"145","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HSET","id":"HSET","line":"148","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HSETNX","id":"HSETNX","line":"149","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HMSET","id":"HMSET","line":"150","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HINCRBY","id":"HINCRBY","line":"151","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HINCRBYFLOAT","id":"HINCRBYFLOAT","line":"152","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HGET","id":"HGET","line":"153","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HMGET","id":"HMGET","line":"154","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HDEL","id":"HDEL","line":"155","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HEXISTS","id":"HEXISTS","line":"156","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HLEN","id":"HLEN","line":"157","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HKEYS","id":"HKEYS","line":"158","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HVALS","id":"HVALS","line":"159","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"HGETALL","id":"HGETALL","line":"160","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PUBLISH","id":"PUBLISH","line":"163","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SUBSCRIBE","id":"SUBSCRIBE","line":"164","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"UNSUBSCRIBE","id":"UNSUBSCRIBE","line":"165","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PSUBSCRIBE","id":"PSUBSCRIBE","line":"166","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"PUNSUBSCRIBE","id":"PUNSUBSCRIBE","line":"167","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"EVAL","id":"EVAL","line":"170","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"SCRIPT","id":"SCRIPT","line":"171","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"KILL","id":"KILL","line":"172","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isStatic":true,"name":"LOAD","id":"LOAD","line":"173","kind":"property"}],"line":"6","kind":"class"}],"line":"12","kind":"library"}